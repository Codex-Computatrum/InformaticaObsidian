# Protocolli Application layers
## Simple Mail Transfer Protocol
È l'application layer principale per lo scambio di mail sul web. Coinvolge due "elementi":
- User agent: le applicazioni che permettono di gestire le mail utilizzando il protocollo SMTP (Gmail, Apple, Outlook, ecc.)
- Mail Server: un server che serve per lo "stockaggio" delle mail
Per trasferire le mail () si utilizza il protocollo TCP

Esempio di scambio di mailA
Abbiamo 4 elementi coinvolti:
- A's agent
- A's mail server
- B's agent
- B's mail server
E funziona in questo modo:
1. A invoca il proprio user agent e fornisce a quest'ultimo la mail di B
2. L'user agent A invia il messaggio al mail server A, dove viene messo in coda
3. Il client side di SMTP (del server di A), vede il messaggio in coda. Apre una connessione TCP al SMTP server
4. Dopo l'handshake iniziale, il client SMTP invia il messaggio alla connessione TCP
5. Al mail server di B, il lato server SMTP riceve il messaggio, il mail server mette il messaggio nella mailbox di B
6. B invoca l'usere agent 
### Accesso alle mail
I server sono sempre online, sono certificati e provano costantemente a re-inviare le mail in caso di fallimento (nonostante sia un processo computazionalmente molto "costoso").
Per accedere alle mail serve una ulteriore client-server application (e un ulteriore protocollo) (POP3, IMAP, HTTP).
#### POP3
Mail access protocol molto semplice, l'user agent apre una connessione TCP al mail server alla porta 110.
Una volta stabilita la connessione, POP3 ha 3 successive fasi:
1.  Autorizzazione: l'user agent invia username e password per autenticare l'utente
2. Transazione: L'user agent "ricava" i messaggi,  ecc.
3. Aggiornamento: dopo che il client ha chiesto di uscire, terminando la sessione POP3, il server quindi elimina i messaggi marchiati (che sono stati marchiati alla fase 2.)
#### IMAP
A differenza del POP3, IMAP ha funzionalità aggiuntive, per esempio:
- Creare cartelle
- La ricerca
- Permette a diversi client di essere connessi allo stesso server
#### HTTP
Permette agli utenti di accedere alle proprie caselle di posta elettronica dal web, l'user agent in questo caso è il browser stesso, il mail server utilizzano comunque lo standard SMTP per lo scambio di messaggi.
## Domain Name System
È un application layer che manages la traduzione da hostname a indirizzi IP.
I server DNS sono in genere delle macchine UNIX che utilizzano connessioni UDP e la porta *13*.
Esempio:
Per accedere a una pagina web il browser effettuerà i seguenti passaggi:
1. Il browser estra l'hostname dall'URL e passa l'hostname al client side della applicazione DNS (gethostbyname() in C)
2. Il  client DNS invia una query contenente l'hostname a un server DNS
3. Il client DNS riceve una risposta contenente l'indirizzo IP per l'hostname dato
4. Non appena il browser riceve l'indirizzo IP dal DNS, potrà iniziare una connessioen TCP al processo del server HTTP che si trova alla porta 80 di quell'indirizzo IP
Ovviamente per queste operazioni è necessario del tempo, non sempre trascurabile.

Internet DNS is distributed and hierarchically organized, il motivo per cui questo approccio è preferito ad uno centralizzato sono:
- Evitare un singolo *point of failure* (che manderebbe in crash l'**intero internet**)
- Regolare il volume di traffico
- Miglior reachability
- Manutenzione e aggiornamenti più semplici senza effecting l'intero internet
### Classi di server DNS
1. Root DNS server
2. Top-level servers: uno o più per ogni dominio top-level(.com, .org, .net, .it, .uk, ecc.)
3. Authorizative DNS servers: provide real hostname-IP mapping, possosno essere in possesso a aziende (amazon, facebook, ecc. )
### Resolver
Questo DNS è manutenuto in genere dagli ISP, quando un host effettua una query DNS, la qury viene inviata al resolver, che agisce come un proxy, inviando la richiesta alla gerarchia dei server DNS.
### Aliasing
I DNS forniscono un aliasing per server con nomi lunghi o complicati, andando a utilizzarne diversi di più corti o semplici.
### Load distribution
In genere i siti più visitati sono replicati su diversi server, ognuno di questi running su un sistema diverso ed avente un diverso indirizzo IP. Il database dei DNS contiene questo insieme di indirizzi IP.
## Peer-to-peer
L'architettura P2P (Peer-to-Peer) è un modello di rete decentralizzato in cui i dispositivi (peer) collaborano direttamente tra loro per condividere risorse senza un server centrale. I peer si cercano e si collegano direttamente per condividere informazioni, file o servizi. Questo modello offre resistenza ai guasti, ridondanza e distribuzione efficiente delle risorse ma richiede soluzioni per la sicurezza e la ricerca delle risorse, oltre a una implementazione più complessa.
### BitTorrent
<span style="color:red">Da scrivere</span>
